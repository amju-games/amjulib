// wavedemo-frag.txt

uniform mat4 modelViewProjectionMatrix;

varying float gY;
varying vec3 vNormal;

uniform sampler2D spheremapSampler;

void main()
{
//  vec3 lightdir = vec3(10.0, 0.0, 0.0);

//  float nDotL = max(0.0, dot(normalize(vNormal), lightdir));
//  gl_FragColor = vec4(nDotL, nDotL, 1.0, 1.0); 

  vec3 unitNormal = normalize(vNormal);

  vec3 normColour = unitNormal * 0.5 + 0.5;
  normColour.b = 1.0;

  // sphere map
  vec3 view = (modelViewProjectionMatrix * vec4(0, 0, 1, 1)).xyz;
  vec3 r = reflect(view, unitNormal);
  r.z += 1.0;
  r = normalize(r);
  vec2 uv = r.xy * 0.5 + 0.5;
  vec4 reflectColour = texture2D(spheremapSampler, uv);

  gl_FragColor = vec4(normColour, 1.0) * 0.9 + reflectColour * 0.1; 
}

